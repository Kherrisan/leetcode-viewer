{"kotlin":"class Solution {\n    fun majorityElement(nums: IntArray): Int {\n        if(nums.size==0){\n            return 0\n        }else if(nums.size==1){\n            return nums[0]\n        }\n        var major:Int? = null\n        var majorNums = 0\n        for(i in nums){\n            if(major == null){\n                major = i\n                majorNums = 1\n            }else if(major == i){\n                majorNums +=1\n            }else{\n                majorNums -= 1\n                if(majorNums<0){\n                    majorNums=1\n                    major=i\n                }\n            }\n        }\n        return major!!\n    }\n}","java":"class Solution {\n    public int majorityElement(int[] nums) {\n        if(nums.length==1){\n            return nums[0];\n        }\n        int major=0;\n        boolean start=true;\n        int majorNums = 0;\n        for(int i:nums){\n            if(start){\n                major=i;\n                majorNums=1;\n                start=false;\n            }else if(major==i){\n                majorNums++;\n            }else{\n                majorNums--;\n                if(majorNums<0){\n                    majorNums=1;\n                    major=i;\n                }\n            }\n        }\n        return major;\n    }\n}"}