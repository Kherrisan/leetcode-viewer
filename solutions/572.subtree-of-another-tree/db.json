{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode s, TreeNode t) {\n        if(t==null){\n            return true;\n        }else if(s==null){\n            return false;\n        }\n        return equals(s,t) || isSubtree(s.left,t) || isSubtree(s.right,t);\n    }\n\n    boolean equals(TreeNode s,TreeNode t){\n        if(s==null&&t==null){\n            return true;\n        }else if(s==null||t==null){\n            return false;\n        }else{\n            return s.val==t.val && equals(s.left,t.left) && equals(s.right,t.right);\n        }\n    }\n}"}