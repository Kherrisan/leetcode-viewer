{"java":"class Solution {\n    Map<Character,Integer> cnt = new HashMap();\n    Map<Character,Integer> dct = new HashMap();\n    public String minWindow(String s, String t) {\n        int res=Integer.MAX_VALUE;\n        int tl=t.length(),sl=s.length();\n        for(int i=0;i<tl;i++){\n            dct.put(t.charAt(i),dct.getOrDefault(t.charAt(i),0)+1);\n        }\n        int left=0,right=-1;\n        int resL=0,resR=-1;\n        while(right<sl){\n            right++;\n            if(right<sl&&dct.containsKey(s.charAt(right))){\n                cnt.put(s.charAt(right),cnt.getOrDefault(s.charAt(right),0)+1);\n            }\n            while(left<=right&& check()){\n                if(right-left+1<res){\n                    res=right-left+1;\n                    resL=left;\n                    resR=right;\n                }\n                if(dct.containsKey(s.charAt(left))){\n                    cnt.put(s.charAt(left),cnt.getOrDefault(s.charAt(left),0)-1);\n                }\n                left++;\n            }\n        }\n        return resR==-1?\"\": s.substring(resL,resR+1);\n    }\n\n    boolean check(){\n        for(char ch:dct.keySet()){\n            if(!cnt.containsKey(ch)||cnt.get(ch)<dct.get(ch)){\n                return false;\n            }\n        }\n        return true;\n    }\n}"}