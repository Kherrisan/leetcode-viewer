{"java":"class Solution {\n    public int findBestValue(int[] arr, int target) {\n        if(target==0){\n            return 0;\n        }\n        Arrays.sort(arr);\n        int N=arr.length;\n        int[] prefixSum = new int[N+1];\n        for(int i=1;i<=N;i++){\n            prefixSum[i]=prefixSum[i-1]+arr[i-1];\n        }\n        if(target>prefixSum[N]){\n            return arr[N-1];\n        }\n        int diff=target;\n        int value=0;\n        for(int i=1;i<=arr[N-1];i++){\n            int l=0,r=N-1,index=-1;\n            while(l<=r){\n                int m=l+(r-l)/2;\n                if(i<arr[m]){\n                    r=m-1;\n                }else if(i>arr[m]){\n                    l=m+1;\n                }else{\n                    index=m;\n                    break;\n                }\n                index=l;\n            }\n            int sum=prefixSum[index]+(N-index)*i;\n            if(Math.abs(sum-target)<diff){\n                diff=Math.abs(sum-target);\n                value=i;\n            }\n        }\n        return value;\n    }\n}"}