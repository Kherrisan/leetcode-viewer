{"java":"class Solution {\n    public int trap(int[] height) {\n        int res=0;\n        Stack<Integer> stack=new Stack();\n        int current=0;\n        while(current<height.length){\n            while(!stack.empty() && height[current]>height[stack.peek()]){\n                int top = stack.pop();\n                if(stack.empty()){\n                    break;\n                }\n                int distance = current - stack.peek() -1;\n                int bounded=Math.min(height[current],height[stack.peek()])-height[top];\n                res+=distance*bounded;\n            }\n            stack.push(current++);\n        }\n        return res;\n    }\n}"}