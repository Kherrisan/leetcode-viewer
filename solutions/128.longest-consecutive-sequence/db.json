{"java":"class Solution {\n    public int longestConsecutive(int[] nums) {\n        Set<Integer> numsSet = new HashSet<>();\n        for (Integer num : nums) {\n            numsSet.add(num);\n        }\n        int longest = 0;\n        for (Integer num : nums) {\n            if (numsSet.remove(num)) {\n                // 向当前元素的左边搜索,eg: 当前为100, 搜索：99，98，97,...\n                int currentLongest = 1;\n                int current = num;\n                while (numsSet.remove(current - 1)) current--;\n                currentLongest += (num - current);\n\t\t// 向当前元素的右边搜索,eg: 当前为100, 搜索：101，102，103,...\n                current = num;\n                while(numsSet.remove(current + 1)) current++;\n                currentLongest += (current - num);\n        \t// 搜索完后更新longest.\n                longest = Math.max(longest, currentLongest);\n            }\n        }\n        return longest;\n    }\n}"}