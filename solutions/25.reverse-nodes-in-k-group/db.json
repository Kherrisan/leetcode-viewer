{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        if(k == 1){\n            return head;\n        }\n        ListNode res = null;\n        ListNode segmentHead;\n        ListNode segmentTail = null;\n        while(true){\n            segmentHead = head;\n            for(int i=0;i<k;i++){\n                if(head == null){\n                    return res;\n                }\n                head = head.next;\n            }\n            head = segmentHead;\n            ListNode next;\n            ListNode previous = null;\n            for(int i=0;i<k;i++){\n                next = head.next;\n                head.next = previous;\n                previous = head;\n                head = next;\n            }\n            if(res == null){\n                res = previous;\n            }else{\n                segmentTail.next = previous;\n            }\n            segmentTail = segmentHead;\n            segmentTail.next = head;\n        }\n    }\n}"}