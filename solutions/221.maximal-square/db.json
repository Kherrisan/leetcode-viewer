{"java":"class Solution {\n    public int maximalSquare(char[][] matrix) {\n        int maxSide = 0;\n        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {\n            return maxSide;\n        }\n        int rows = matrix.length, columns = matrix[0].length;\n        int[][] dp = new int[rows][columns];\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                if (matrix[i][j] == '1') {\n                    if (i == 0 || j == 0) {\n                        dp[i][j] = 1;\n                    } else {\n                        dp[i][j] = Math.min(Math.min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;\n                    }\n                    maxSide = Math.max(maxSide, dp[i][j]);\n                }\n            }\n        }\n        int maxSquare = maxSide * maxSide;\n        return maxSquare;\n    }\n}"}