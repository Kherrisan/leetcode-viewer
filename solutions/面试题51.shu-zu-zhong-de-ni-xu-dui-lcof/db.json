{"java":"\n\nclass Solution {\n\n    public static void main(String[] args) {\n        System.out.println(new Solution().reversePairs(new int[]{7, 5, 6, 4}));\n    }\n\n    public int reversePairs(int[] nums) {\n        if (nums.length <= 1) {\n            return 0;\n        }\n        return reversePairs(nums, 0, nums.length - 1);\n    }\n\n    int reversePairs(int[] nums, int left, int right) {\n        if (left >= right) {\n            return 0;\n        }\n        int mid = (left + right) / 2;\n        int rp = reversePairs(nums, left, mid) + reversePairs(nums, mid + 1, right);\n        int[] temp = new int[right - left + 1];\n        int l = left, r = mid + 1, k = 0;\n        //merge nums[l:mid] and nums[mid+1:right-1];\n        while (l <= mid && r <= right) {\n            rp += nums[l] <= nums[r] ? r - (mid + 1) : 0;\n            temp[k++] = nums[l] <= nums[r] ? nums[l++] : nums[r++];\n        }\n        while (l <= mid) {\n            rp += r - (mid + 1);\n            temp[k++] = nums[l++];\n        }\n        while (r <= right)\n            temp[k++] = nums[r++];\n        System.arraycopy(temp, 0, nums, left, right - left + 1);\n        return rp;\n    }\n}"}