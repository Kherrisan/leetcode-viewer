{"java":"class Solution {\n    public int[] spiralOrder(int[][] matrix) {\n        int M=matrix.length;\n        if(M==0){\n            return new int[0];\n        }\n        int N=matrix[0].length;\n        \n        int[] res=new int[M*N];\n        int cur=0;\n        int offset=0;\n        while(cur<res.length){\n            for(int i=offset;i<N-offset;i++){\n                res[cur++]=matrix[offset][i];\n            }\n            if(cur>=res.length){\n                break;\n            }\n            for(int i=offset+1;i<M-offset;i++){\n                res[cur++]=matrix[i][N-1-offset];\n            }\n            if(cur>=res.length){\n                break;\n            }\n            for(int i=N-2-offset;i>=offset;i--){\n                res[cur++]=matrix[M-1-offset][i];\n            }\n            if(cur>=res.length){\n                break;\n            }\n            for(int i=M-2-offset;i>offset;i--){\n                res[cur++]=matrix[i][offset];\n            }\n            offset++;\n        }\n        return res;\n    }\n}"}