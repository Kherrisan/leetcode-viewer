{"java":"class Solution {\n    public int movingCount(int m, int n, int k) {\n        return reachableCount(new int[m][n],0,0,k);\n    }\n\n    int reachableCount(int[][] reachable,int x,int y,int k){\n        if(x<0||x>=reachable.length||y<0||y>=reachable[0].length){\n            return 0;\n        }\n        if(!coordinateConstraint(x,y,k)||reachable[x][y]==-1){\n            return 0;\n        }else if(reachable[x][y]==0){\n            reachable[x][y]=1;\n            int count=1+reachableCount(reachable,x-1,y,k)+\n                reachableCount(reachable,x+1,y,k)+\n                reachableCount(reachable,x,y-1,k)+\n                reachableCount(reachable,x,y+1,k);\n            return count;\n        }\n        return 0;\n    }\n\n    boolean coordinateConstraint(int x,int y,int k){\n        int res=0;\n        while(x>0){\n            res+=(x%10);\n            x/=10;\n        }\n        while(y>0){\n            res+=(y%10);\n            y/=10;\n        }\n        return res<=k;\n    }\n}"}