{"java":"class Solution {\n    public int threeSumClosest(int[] nums, int target) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        int best = 10000000;\n\n        // 枚举 a\n        for (int i = 0; i < n; ++i) {\n            // 保证和上一次枚举的元素不相等\n            if (i > 0 && nums[i] == nums[i - 1]) {\n                continue;\n            }\n            // 使用双指针枚举 b 和 c\n            int j = i + 1, k = n - 1;\n            while (j < k) {\n                int sum = nums[i] + nums[j] + nums[k];\n                // 如果和为 target 直接返回答案\n                if (sum == target) {\n                    return target;\n                }\n                // 根据差值的绝对值来更新答案\n                if (Math.abs(sum - target) < Math.abs(best - target)) {\n                    best = sum;\n                }\n                if (sum > target) {\n                    // 如果和大于 target，移动 c 对应的指针\n                    int k0 = k - 1;\n                    // 移动到下一个不相等的元素\n                    while (j < k0 && nums[k0] == nums[k]) {\n                        --k0;\n                    }\n                    k = k0;\n                } else {\n                    // 如果和小于 target，移动 b 对应的指针\n                    int j0 = j + 1;\n                    // 移动到下一个不相等的元素\n                    while (j0 < k && nums[j0] == nums[j]) {\n                        ++j0;\n                    }\n                    j = j0;\n                }\n            }\n        }\n        return best;\n    }\n}\n"}