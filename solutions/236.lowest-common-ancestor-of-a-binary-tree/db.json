{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        Map<TreeNode,TreeNode> parents=new HashMap();\n        visit(root.left,root,parents);\n        visit(root.right,root,parents);\n        Set<TreeNode> pPath=new HashSet();\n        pPath.add(p);\n        while(p!=null){\n            pPath.add(parents.get(p));\n            p=parents.get(p);\n        }\n        while(q!=null&!pPath.contains(q)){\n            q=parents.get(q);\n        }\n        return q;\n    }\n\n    void visit(TreeNode node,TreeNode parent,Map<TreeNode,TreeNode> map){\n        if(node==null){\n            return;\n        }\n        map.put(node,parent);\n        visit(node.left,node,map);\n        visit(node.right,node,map);\n    }\n}"}