{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\nListNode head = null;\n        ListNode res = head;\n        PriorityQueue<ListNode> pq = new PriorityQueue<>(new Comparator<ListNode>() {\n            @Override\n            public int compare(ListNode listNode, ListNode t1) {\n                return listNode.val - t1.val;\n            }\n        });\n        for (ListNode node : lists) {\n            if(node!=null)\n            pq.add(node);\n        }\n        while (!pq.isEmpty()) {\n            ListNode n = pq.poll();\n            if (head == null) {\n                head = new ListNode(n.val);\n                res = head;\n            } else {\n                head.next = new ListNode(n.val);\n                head = head.next;\n            }\n            n = n.next;\n            if (n != null) {\n                pq.offer(n);\n            }\n        }\n        return res;\n    }\n}"}