{"java":"class Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n        Map<Integer,Integer> counts1=new HashMap();\n        for(int n:nums1){\n            counts1.put(n,counts1.getOrDefault(n,0)+1);\n        }\n        Map<Integer,Integer> counts2=new HashMap();\n        for(int n:nums2){\n            counts2.put(n,counts2.getOrDefault(n,0)+1);\n        }\n        Map<Integer,Integer> resCounts=new HashMap();\n        for(int n:counts1.keySet()){\n            if(counts2.containsKey(n)){\n                resCounts.put(n,Math.min(counts1.get(n),counts2.get(n)));\n            }\n        }\n        List<Integer> res=new ArrayList();\n        for(int n:resCounts.keySet()){\n            int c=resCounts.get(n);\n            while(c>0){\n                res.add(n);\n                c--;\n            }\n        }\n        int[] rres=new int[res.size()];\n        for(int i=0;i<res.size();i++){\n            rres[i]=res.get(i);\n        }\n        return rres;\n    }\n}"}