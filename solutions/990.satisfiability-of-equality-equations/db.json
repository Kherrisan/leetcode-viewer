{"java":"class Solution {\n    public boolean equationsPossible(String[] equations) {\n        int length = equations.length;\n        int[] parent = new int[26];\n        for (int i = 0; i < 26; i++) {\n            parent[i] = i;\n        }\n        for (String str : equations) {\n            if (str.charAt(1) == '=') {\n                int index1 = str.charAt(0) - 'a';\n                int index2 = str.charAt(3) - 'a';\n                union(parent, index1, index2);\n            }\n        }\n        for (String str : equations) {\n            if (str.charAt(1) == '!') {\n                int index1 = str.charAt(0) - 'a';\n                int index2 = str.charAt(3) - 'a';\n                if (find(parent, index1) == find(parent, index2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    public void union(int[] parent, int index1, int index2) {\n        parent[find(parent, index1)] = find(parent, index2);\n    }\n\n    public int find(int[] parent, int index) {\n        while (parent[index] != index) {\n            parent[index] = parent[parent[index]];\n            index = parent[index];\n        }\n        return index;\n    }\n}\n"}